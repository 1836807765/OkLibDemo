apply plugin: 'com.android.application'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.3"
    defaultConfig {
        applicationId "com.oklib.demo"
        minSdkVersion 15
        targetSdkVersion 25
        versionCode 6
        versionName "1.1.3"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true

        ndk {
            // 设置支持的SO库架构
            abiFilters 'armeabi' //, 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

    }
    signingConfigs {
//        release {
//            try {
//                storeFile file("oklib.jks")
//                storePassword KEY_STORE_PASSWORD
//                keyAlias KEY_STORE_KEY_ALIAS
//                keyPassword KEY_STORE_KEY_PASSWORD
//            }
//            catch (ex) {
//                throw new InvalidUserDataException("You should define KEYSTORE_PASSWORD and KEY_PASSWORD in gradle.properties.")
//            }
//        }
//        debug {
//            keyAlias KEY_STORE_KEY_ALIAS
//            keyPassword KEY_STORE_PASSWORD
//            storeFile file('../oklib.jks')
//            storePassword KEY_STORE_KEY_PASSWORD
//        }
    }

    // 自定义输出配置
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def outputFile = output.outputFile
            def fileName
            if (outputFile != null && outputFile.name.endsWith('.apk')) {
                if (variant.buildType.name.equals('release')) {
                    fileName = "OkLib库${defaultConfig.versionName}_${releaseTime()}.apk"
                } else if (variant.buildType.name.equals('debug')) {
                    fileName = "OkLib库${defaultConfig.versionName}_${releaseTime()}_debug.apk"
                }
                output.outputFile = new File(outputFile.parent, fileName)
            }
        }
    }
}

//对debug、release模式都生效
def releaseTime() {
    return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("UTC"))
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:25.3.1'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:multidex:1.0.1'
    compile 'com.squareup.picasso:picasso:2.5.2'
    //compile 'com.oklib:oklib:latest.release'
    //compile 'com.oklib:oklib:1.0.12'
    compile project(':oklib')
    compile project(':bmoblib')
    compile 'com.aliyun.ams:alicloud-android-hotfix:3.0.7'
    compile 'com.tencent.bugly:crashreport:latest.release'
    //其中latest.release指代最新Bugly SDK版本号，也可以指定明确的版本号，例如2.1.9
    compile 'com.tencent.bugly:nativecrashreport:latest.release'
    //其中latest.release指代最新Bugly NDK版本号，也可以指定明确的版本号，例如3.0
    //compile 'com.github.chrisbanes:PhotoView:2.0.0'
    //    compile 'com.github.chrisbanes:PhotoView:latest.release.here'
    //glide
    //    compile 'com.github.bumptech.glide:glide:3.6.1'
    //    compile 'com.github.bumptech.glide:glide:4.1.1'
    //    annotationProcessor 'com.github.bumptech.glide:compiler:4.1.1'
    compile project(':expressionlib')
    compile project(':loadsir')
}

repositories {
    maven {
        url "http://maven.aliyun.com/nexus/content/repositories/releases"
    }
}